<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="4" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-03T10:55:07 IST" name="Suite" finished-at="2023-06-03T10:55:34 IST" duration-ms="26880">
    <groups>
    </groups>
    <test started-at="2023-06-03T10:55:07 IST" name="FirefoxTest" finished-at="2023-06-03T10:55:34 IST" duration-ms="26880">
      <class name="DemoTestNG.DemoTestNG2">
        <test-method is-config="true" signature="OpenBrowser(java.lang.String)[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:07 IST" name="OpenBrowser" finished-at="2023-06-03T10:55:09 IST" duration-ms="2312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method is-config="true" signature="createPOMObject()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:11 IST" name="createPOMObject" finished-at="2023-06-03T10:55:11 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPOMObject -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:11 IST" name="beforeMethod" finished-at="2023-06-03T10:55:22 IST" duration-ms="10879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifysignupButtononSignupPage()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:22 IST" name="VerifysignupButtononSignupPage" finished-at="2023-06-03T10:55:23 IST" duration-ms="1037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifysignupButtononSignupPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:23 IST" name="afterMethod" finished-at="2023-06-03T10:55:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifysignupButtononSignupPage status=SUCCESS method=DemoTestNG2.VerifysignupButtononSignupPage()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:23 IST" name="beforeMethod" finished-at="2023-06-03T10:55:24 IST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyMessageonSignUppage()[pri:1, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:24 IST" name="VerifyMessageonSignUppage" finished-at="2023-06-03T10:55:24 IST" duration-ms="31" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text is wrong expected [Add new user] but found [Selenium Webdriver]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text is wrong expected [Add new user] but found [Selenium Webdriver]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at DemoTestNG.DemoTestNG2.VerifyMessageonSignUppage(DemoTestNG2.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMessageonSignUppage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:24 IST" name="afterMethod" finished-at="2023-06-03T10:55:25 IST" duration-ms="989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMessageonSignUppage status=FAILURE method=DemoTestNG2.VerifyMessageonSignUppage()[pri:1, instance:DemoTestNG.DemoTestNG2@2a798d51] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:25 IST" name="beforeMethod" finished-at="2023-06-03T10:55:26 IST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifytheaccountisalreadyExit()[pri:2, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:26 IST" name="VerifytheaccountisalreadyExit" finished-at="2023-06-03T10:55:27 IST" duration-ms="1476" status="FAIL">
          <exception class="java.lang.NoSuchMethodError">
            <message>
              <![CDATA['java.lang.ClassLoader[] org.apache.logging.log4j.util.LoaderUtil.getClassLoaders()']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchMethodError: 'java.lang.ClassLoader[] org.apache.logging.log4j.util.LoaderUtil.getClassLoaders()'
at org.apache.logging.log4j.core.impl.ThreadContextDataInjector.getServiceProviders(ThreadContextDataInjector.java:83)
at org.apache.logging.log4j.core.impl.ThreadContextDataInjector.initServiceProviders(ThreadContextDataInjector.java:73)
at org.apache.logging.log4j.core.impl.ThreadContextDataInjector.getProviders(ThreadContextDataInjector.java:285)
at org.apache.logging.log4j.core.impl.ThreadContextDataInjector.access$000(ThreadContextDataInjector.java:55)
at org.apache.logging.log4j.core.impl.ThreadContextDataInjector$ForCopyOnWriteThreadContextMap.<init>(ThreadContextDataInjector.java:226)
at org.apache.logging.log4j.core.impl.ContextDataInjectorFactory.createDefaultInjector(ContextDataInjectorFactory.java:94)
at org.apache.logging.log4j.core.impl.ContextDataInjectorFactory.createInjector(ContextDataInjectorFactory.java:71)
at org.apache.logging.log4j.core.lookup.ContextMapLookup.<init>(ContextMapLookup.java:34)
at org.apache.logging.log4j.core.lookup.Interpolator.<init>(Interpolator.java:131)
at org.apache.logging.log4j.core.config.AbstractConfiguration.<init>(AbstractConfiguration.java:133)
at org.apache.logging.log4j.core.config.NullConfiguration.<init>(NullConfiguration.java:32)
at org.apache.logging.log4j.core.LoggerContext.<clinit>(LoggerContext.java:85)
at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.createContext(ClassLoaderContextSelector.java:254)
at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.locateContext(ClassLoaderContextSelector.java:218)
at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:136)
at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:123)
at org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:117)
at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:150)
at org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:47)
at org.apache.logging.log4j.LogManager.getContext(LogManager.java:196)
at org.apache.logging.log4j.LogManager.getLogger(LogManager.java:599)
at org.apache.poi.util.IOUtils.<clinit>(IOUtils.java:43)
at org.apache.poi.poifs.filesystem.FileMagic.valueOf(FileMagic.java:209)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:222)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:185)
at Utils.Utility.getExcelData(Utility.java:51)
at DemoTestNG.DemoTestNG2.VerifytheaccountisalreadyExit(DemoTestNG2.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchMethodError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifytheaccountisalreadyExit -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:27 IST" name="afterMethod" finished-at="2023-06-03T10:55:28 IST" duration-ms="860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifytheaccountisalreadyExit status=FAILURE method=DemoTestNG2.VerifytheaccountisalreadyExit()[pri:2, instance:DemoTestNG.DemoTestNG2@2a798d51] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:28 IST" name="beforeMethod" finished-at="2023-06-03T10:55:28 IST" duration-ms="480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyMessageonSignUpPageisSignup()[pri:3, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:28 IST" name="VerifyMessageonSignUpPageisSignup" finished-at="2023-06-03T10:55:28 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyMessageonSignUpPageisSignup -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:28 IST" name="afterMethod" finished-at="2023-06-03T10:55:28 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyMessageonSignUpPageisSignup status=SUCCESS method=DemoTestNG2.VerifyMessageonSignUpPageisSignup()[pri:3, instance:DemoTestNG.DemoTestNG2@2a798d51] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObject()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:28 IST" name="clearObject" finished-at="2023-06-03T10:55:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObject -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:DemoTestNG.DemoTestNG2@2a798d51]" started-at="2023-06-03T10:55:32 IST" name="afterTest" finished-at="2023-06-03T10:55:33 IST" duration-ms="775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- DemoTestNG.DemoTestNG2 -->
      <class name="DemoTestNG.LoginTestNG">
        <test-method is-config="true" signature="OpenBrowser(java.lang.String)[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:09 IST" name="OpenBrowser" finished-at="2023-06-03T10:55:11 IST" duration-ms="1777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method is-config="true" signature="createPOMObject()[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:11 IST" name="createPOMObject" finished-at="2023-06-03T10:55:11 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPOMObject -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:11 IST" name="beforeMethod" finished-at="2023-06-03T10:55:26 IST" duration-ms="14880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLoginPageisOpen()[pri:1, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:26 IST" name="VerifyLoginPageisOpen" finished-at="2023-06-03T10:55:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginPageisOpen -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:26 IST" name="afterMethod" finished-at="2023-06-03T10:55:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginPageisOpen status=SUCCESS method=LoginTestNG.VerifyLoginPageisOpen()[pri:1, instance:DemoTestNG.LoginTestNG@222545dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:26 IST" name="beforeMethod" finished-at="2023-06-03T10:55:28 IST" duration-ms="1635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyLoginTextprsentinPage()[pri:2, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:28 IST" name="VerifyLoginTextprsentinPage" finished-at="2023-06-03T10:55:28 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginTextprsentinPage -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:28 IST" name="beforeMethod" finished-at="2023-06-03T10:55:29 IST" duration-ms="963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:28 IST" name="afterMethod" finished-at="2023-06-03T10:55:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginTextprsentinPage status=SUCCESS method=LoginTestNG.VerifyLoginTextprsentinPage()[pri:2, instance:DemoTestNG.LoginTestNG@222545dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="VerifyLoginFunctionality()[pri:3, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:29 IST" name="VerifyLoginFunctionality" finished-at="2023-06-03T10:55:32 IST" duration-ms="3014" status="FAIL">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class org.apache.poi.util.IOUtils]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class org.apache.poi.util.IOUtils
at org.apache.poi.poifs.filesystem.FileMagic.valueOf(FileMagic.java:209)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:222)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:185)
at Utils.Utility.getExcelData(Utility.java:51)
at DemoTestNG.LoginTestNG.VerifyLoginFunctionality(LoginTestNG.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginFunctionality -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:32 IST" name="afterMethod" finished-at="2023-06-03T10:55:32 IST" duration-ms="855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginFunctionality status=FAILURE method=LoginTestNG.VerifyLoginFunctionality()[pri:3, instance:DemoTestNG.LoginTestNG@222545dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObject()[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:32 IST" name="clearObject" finished-at="2023-06-03T10:55:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObject -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:DemoTestNG.LoginTestNG@222545dc]" started-at="2023-06-03T10:55:33 IST" name="afterTest" finished-at="2023-06-03T10:55:34 IST" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- DemoTestNG.LoginTestNG -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- Suite -->
</testng-results>
